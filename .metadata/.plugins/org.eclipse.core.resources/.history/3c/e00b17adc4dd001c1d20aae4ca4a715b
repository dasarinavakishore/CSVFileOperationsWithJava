import java.io.BufferedReader;
import java.io.FileNotFoundException;
import java.io.FileReader;
import java.io.IOException;
import java.util.LinkedHashSet;

public class CSVFileReaderFilterOperations {

	public LinkedHashSet<String> readCSVFilesAndRemoveDuplicates(String[] inputFiles) {

		BufferedReader reader = null;
		String eachRow = "";

		LinkedHashSet<String> finalCsvList = new LinkedHashSet<>();

		for (int i = 0; i < inputFiles.length; i++) {
			String csv_file = inputFiles[i];

			try {
				reader = new BufferedReader(new FileReader(csv_file));
				if (i == 1) {
					if ((eachRow = reader.readLine()) != null) {
						// this condition is to ignore header in 2nd file
					}
				}

				while ((eachRow = reader.readLine()) != null) {
					if (finalCsvList.add(eachRow)) {
						// if the row is added only once to list then no duplicate,,else duplicate row
						System.out.println("added once-->: " + eachRow);

						// removing the row which starts with 'String'
						if (eachRow.startsWith("String")) {
							finalCsvList.remove(eachRow);
						}

						// replacing # with empty
						if (eachRow.startsWith("#")) {
							System.out.println("row contained #==>" + eachRow);
							finalCsvList.remove(eachRow);
							String replacedStr = eachRow.replace("#", "");
							System.out.println("replacedRow==>" + replacedStr);
							finalCsvList.add(replacedStr);
						}

						// replacing end ; with 0;
						if (eachRow.endsWith(";;")) {
							System.out.println("row end contained ;==>" + eachRow);
							finalCsvList.remove(eachRow);
							String replacedStr = eachRow.replaceAll("[;]$", "0");
							System.out.println("replacedRow==>" + replacedStr);
							finalCsvList.add(replacedStr);
						}

					} else if (CommonUtil.checkIsNullOrEmpty(eachRow)) {
						System.out.println("-------duplicate row--------" + eachRow);
					}
				}
			} catch (FileNotFoundException e) {
				e.printStackTrace();
			} catch (IOException e) {
				e.printStackTrace();
			} finally {
				if (reader != null) {
					try {
						reader.close();
					} catch (IOException e) {
						e.printStackTrace();
					}
				}
			}

		}

//		Iterator<String> itr = finalCsvList.iterator();
//		while (itr.hasNext()) {
//			String value = itr.next();
//			if (value.startsWith("String")) {
//				itr.remove();
//			}
//		}

		// to print the finalList
//		finalCsvList.forEach(System.out::println);

		ReadWriteCSVFileAndRemoveDuplicates r = new ReadWriteCSVFileAndRemoveDuplicates();
		String outputFile = "C:\\Users\\robin\\Documents\\Assessment\\temp\\temp.csv";
		String seperator = ",";
		r.writeToCsvFile(finalCsvList, seperator, outputFile);
		return finalCsvList;

	}

}
